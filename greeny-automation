#!/usr/bin/env bash

notify () {
	local message="$1"
	shift
	for destination in "$@"; do
		case "$destination" in
			stdout)    echo "$(date) | $message" & ;;
			syslog)    logger -i greeny "$message" & ;;
			telegram)  telegram-send "$message" & ;;
			*)         echo "Unknown destination: $destination" ;;
		esac
	done
}

gpiosetup () {
	notify "$message_gpiosetup" "${notification_system[@]}"
	local zone
	for zone in "${zones[@]}"; do
		local lightrelay="$zone"_lightrelay
		local waterlevel="$zone"_waterlevel
		local waterpump="$zone"_waterpump
		cd /sys/class/gpio
		[ -n "${!lightrelay}" ] && echo "${!lightrelay}" > export && echo out > gpio"${!lightrelay}"/direction && echo 1 > gpio"${!lightrelay}"/value && echo 1 > gpio"${!lightrelay}"/active_low
		[ -n "${!waterlevel}" ] && echo "${!waterlevel}" > export && echo in  > gpio"${!waterlevel}"/direction
		[ -n "${!waterpump}" ]  && echo "${!waterpump}"  > export && echo out > gpio"${!waterpump}"/direction  && echo 1 > gpio"${!waterpump}"/value  && echo 1 > gpio"${!waterpump}"/active_low
	done
	notify "$message_done" "${notification_system[@]}"
}

gpiorelease () {
	notify "$message_gpiorelease" "${notification_system[@]}"
	local zone
	for zone in "${zones[@]}"; do
		local lightrelay="$zone"_lightrelay
		local waterlevel="$zone"_waterlevel
		local waterpump="$zone"_waterpump
		cd /sys/class/gpio
		[ -n "${!lightrelay}" ] && echo "${!lightrelay}" > unexport
		[ -n "${!waterlevel}" ] && echo "${!waterlevel}" > unexport
		[ -n "${!waterpump}" ]  && echo "${!waterpump}"  > unexport
	done
	notify "$message_done" "${notification_system[@]}"
}

shutdown () {
	notify "$message_stop" "${notification_startstop[@]}"
	gpiorelease
	exit
}

waterpumpengage () {
	local waterpump="$zone"_waterpump
	local waterpumpdelay="$zone"_waterpumpdelay
	if [ ! -f /var/run/greeny-"$zone"-waterpumpengaged ] ; then
		touch /var/run/greeny-"$zone"-waterpumpengaged
		echo 1 > /sys/class/gpio/gpio"${!waterpump}"/value & notify "$zone: $message_waterpumpon"  "${notification_waterpump[@]}"  & sleep "${!waterpumpdelay}"
		echo 0 > /sys/class/gpio/gpio"${!waterpump}"/value & notify "$zone: $message_waterpumpoff" "${notification_waterpump[@]}"
		rm /var/run/greeny-"$zone"-waterpumpengaged
	fi
}

. greeny.conf

trap "shutdown" SIGINT

notify "$message_start" "${notification_startstop[@]}"
gpiosetup

while true; do
	for zone in "${zones[@]}"; do
	
		lightrelay="$zone"_lightrelay
		waterlevel="$zone"_waterlevel
		waterpump="$zone"_waterpump
		lightup="$zone"_lightup
		lightdown="$zone"_lightdown
		
		[ -n "${!waterlevel}" ] && case $(cat /sys/class/gpio/gpio"${!waterlevel}"/value) in
			0)  [ -f /var/run/greeny-"$zone"-water-alert ]   && rm -rf /var/run/greeny-"$zone"-water-alert && notify "$zone: $message_waternormal" "${notification_waterlevel[@]}" ;; 
			1)  [ ! -f /var/run/greeny-"$zone"-water-alert ] && touch /var/run/greeny-"$zone"-water-alert  && notify "$zone: $message_waterlow"    "${notification_waterlevel[@]}" && waterpumpengage & ;;
		esac
		
		[ -n "${!lightrelay}" ] && case $(date +%H) in
			"${!lightup}")   [ $(cat /sys/class/gpio/gpio${!lightrelay}/value) = 0 ] && echo 1 > /sys/class/gpio/gpio"${!lightrelay}"/value && notify "$zone: $message_lightup"   "${notification_lightswitch[@]}" ;;
			"${!lightdown}") [ $(cat /sys/class/gpio/gpio${!lightrelay}/value) = 1 ] && echo 0 > /sys/class/gpio/gpio"${!lightrelay}"/value && notify "$zone: $message_lightdown" "${notification_lightswitch[@]}" ;;
		esac
		
	done
	sleep "$pollingtime"
done
